--- cpp/distributed/client.cpp [lightvector:master]+++ cpp/distributed/client.cpp [hzyhhzy:Reversi2022]@@ -22,6 +22,9 @@ #include <fstream>
 #include <sstream>
 #include <chrono>
+
+#include <ghc/filesystem.hpp>
+namespace gfs = ghc::filesystem;
 
 using namespace std;
 using json = nlohmann::json;
@@ -847,7 +850,7 @@ 
   const string path = getModelPath(modelInfo,modelDir);
   //Model already exists
-  if(FileUtils::exists(path))
+  if(gfs::exists(gfs::path(path)))
     return true;
   return false;
 }
@@ -864,7 +867,7 @@   std::unique_lock<std::mutex> lock(downloadStateMutex);
   while(true) {
     //Model already exists
-    if(FileUtils::exists(path))
+    if(gfs::exists(gfs::path(path)))
       return true;
     if(shouldStop())
       return false;
@@ -1032,7 +1035,6 @@     gameData->mode == FinishedGameData::MODE_NORMAL ? "normal" :
     gameData->mode == FinishedGameData::MODE_CLEANUP_TRAINING ? "cleanup_training" :
     gameData->mode == FinishedGameData::MODE_FORK ? "fork" :
-    gameData->mode == FinishedGameData::MODE_HANDICAP ? "handicap" :
     gameData->mode == FinishedGameData::MODE_SGFPOS ? "sgfpos" :
     gameData->mode == FinishedGameData::MODE_HINTPOS ? "hintpos" :
     gameData->mode == FinishedGameData::MODE_HINTFORK ? "hintfork" :
@@ -1063,7 +1065,6 @@ 
     int boardSizeX = gameData->startBoard.x_size;
     int boardSizeY = gameData->startBoard.y_size;
-    int handicap = gameData->handicapForSgf;
     double komi = gameData->startHist.rules.komi;
     string rules = gameData->startHist.rules.toJsonStringNoKomiMaybeOmitStuff();
     json extraMetadata;
@@ -1088,7 +1089,6 @@     httplib::MultipartFormDataItems items = {
       { "board_size_x", Global::intToString(boardSizeX), "", "" },
       { "board_size_y", Global::intToString(boardSizeY), "", "" },
-      { "handicap", Global::intToString(handicap), "", "" },
       { "komi", Global::doubleToString(komi), "", "" },
       { "gametype", gametype, "", "" },
       { "rules", rules, "", "" },
@@ -1144,7 +1144,6 @@ 
     int boardSizeX = gameData->startBoard.x_size;
     int boardSizeY = gameData->startBoard.y_size;
-    int handicap = (gameData->numExtraBlack > 0 ? (gameData->numExtraBlack + 1) : 0);
     double komi = gameData->startHist.rules.komi;
     string rules = gameData->startHist.rules.toJsonStringNoKomiMaybeOmitStuff();
     json extraMetadata = json({});
@@ -1166,7 +1165,6 @@     httplib::MultipartFormDataItems items = {
       { "board_size_x", Global::intToString(boardSizeX), "", "" },
       { "board_size_y", Global::intToString(boardSizeY), "", "" },
-      { "handicap", Global::intToString(handicap), "", "" },
       { "komi", Global::doubleToString(komi), "", "" },
       { "gametype", gametype, "", "" },
       { "rules", rules, "", "" },
