--- cpp/tests/tests.h [lightvector:master]+++ cpp/tests/tests.h [hzyhhzy:Reversi2022]@@ -12,79 +12,6 @@ 
 class NNEvaluator;
 
-namespace Tests {
-  //testboardbasic.cpp
-  void runBoardIOTests();
-  void runBoardBasicTests();
-  void runBoardUndoTest();
-  void runBoardHandicapTest();
-  void runBoardStressTest();
-  void runBoardReplayTest();
-
-
-  //testboardarea.cpp
-  void runBoardAreaTests();
-
-  //testrules.cpp
-  void runRulesTests();
-
-  //testscore.cpp
-  void runScoreTests();
-
-  //testsgf.cpp
-  void runSgfTests();
-  void runSgfFileTests();
-
-  //testnninputs.cpp
-  void runNNInputsV3V4Tests();
-  void runBasicSymmetryTests();
-  void runBoardSymmetryTests();
-
-  //testsearchnonn.cpp
-  void runNNLessSearchTests();
-  //testsearch.cpp
-  void runSearchTests(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, int symmetry, bool useFP16);
-  //testsearchv3.cpp
-  void runSearchTestsV3(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, int symmetry, bool useFP16);
-  //testsearchv8.cpp
-  void runSearchTestsV8(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, bool useFP16);
-  //testsearchv9.cpp
-  void runSearchTestsV9(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, bool useFP16);
-
-  //testsearchmisc.cpp
-  void runNNOnTinyBoard(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, int symmetry, bool useFP16);
-  void runNNSymmetries(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, bool useFP16);
-  void runNNOnManyPoses(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, int symmetry, bool useFP16, const std::string& comparisonFile);
-  void runNNBatchingTest(const std::string& modelFile, bool inputsNHWC, bool cudaNHWC, bool useFP16);
-
-  //testtime.cpp
-  void runTimeControlsTests();
-
-  //testtrainingwrite.cpp
-  void runTrainingWriteTests();
-  void runSelfplayInitTestsWithNN(const std::string& modelFile);
-  void runSekiTrainWriteTests(const std::string& modelFile);
-  void runMoreSelfplayTestsWithNN(const std::string& modelFile);
-  void runSelfplayStatTestsWithNN(const std::string& modelFile);
-
-  //testnn.cpp
-  void runNNLayerTests();
-  void runNNSymmetryTests();
-
-  //testownership.cpp
-  void runOwnershipTests(const std::string& configFile, const std::string& modelFile);
-
-  //testnnevalcanary.cpp
-  void runCanaryTests(NNEvaluator* nnEval, int symmetry, bool print);
-
-  //testconfig.cpp
-  void runConfigTests(const std::vector<std::string>& args);
-
-  //testmisc.cpp
-  void runCollectFilesTests();
-  void runLoadModelTests();
-}
-
 namespace TestCommon {
   bool boardsSeemEqual(const Board& b1, const Board& b2);
 
